name: audiocraft_tests
on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  run_tests:
    name: Run tests on ${{ matrix.runner.friendly_name }}
    runs-on: ${{ matrix.runner.labels }}
    container: ${{ matrix.runner.container }}
    strategy:
      fail-fast: false
      matrix:
        runner:
          - labels: [self-hosted, Linux, X64, cuda-3090-24gb]
            friendly_name: "Python 3.12 CUDA 12.9.1 Torch-TensorRT 2.8.0a0"
            container: "nvcr.io/nvidia/pytorch:25.06-py3"
          - labels: [self-hosted, Linux, X64, cuda-3090-24gb]
            friendly_name: "(LTS) Python 3.12 CUDA 12.8.1.012 Torch-TensorRT 2.7.0a0"
            container: "nvcr.io/nvidia/pytorch:25.03-py3"
          - labels: [self-hosted, Linux, X64, cuda-3090-24gb]
            friendly_name: "Python 3.10 CUDA 12.6.2 Torch-TensorRT 2.5.0a0"
            container: "nvcr.io/nvidia/pytorch:24.10-py3"
          - labels: [self-hosted, Linux, X64, cuda-3090-24gb]
            friendly_name: "Python 3.10 CUDA 12.3.2 Torch-TensorRT 2.2.0a0"
            container: "nvcr.io/nvidia/pytorch:23.12-py3"
    steps:
      - run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
        name: Install uv
      - run: |
          apt install libsndfile1-dev ffmpeg -y
        name: Install system dependencies
      - uses: actions/checkout@v4
        name: Checkout git repo
      - name: Pin numpy
        run: |
          export UV_BREAK_SYSTEM_PACKAGES=true
          export UV_SYSTEM_PYTHON=true
          
          ( [[ "$(uv pip freeze | awk -F'[=.]' '/^numpy==/ {print $3}')" -lt 2 ]] && echo "numpy<2" || echo "numpy>=2" ) >> numpy_override.txt
          uv pip install -U $(cat numpy_override.txt)
      - name: Install audiocraft
        run: |
          export UV_BREAK_SYSTEM_PACKAGES=true
          export UV_SYSTEM_PYTHON=true
          export UV_OVERRIDE=numpy_override.txt
          
          uv pip install --torch-backend=auto ".[dev,wm]" --inexact
      - name: Run unit tests
        run: |
          make tests
      - name: Run integration tests
        run: |
          make tests_integ
